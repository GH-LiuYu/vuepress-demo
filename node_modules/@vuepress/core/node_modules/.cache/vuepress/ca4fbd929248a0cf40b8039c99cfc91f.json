{"remainingRequest":"F:\\www\\blog\\vuepress\\vuepress-demo\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!F:\\www\\blog\\vuepress\\vuepress-demo\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\www\\blog\\vuepress\\vuepress-demo\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\www\\blog\\vuepress\\vuepress-demo\\node_modules\\@vuepress-reco\\vuepress-plugin-bgm-player\\bin\\BgMusic.vue?vue&type=template&id=24d02062&scoped=true&","dependencies":[{"path":"F:\\www\\blog\\vuepress\\vuepress-demo\\node_modules\\@vuepress-reco\\vuepress-plugin-bgm-player\\bin\\BgMusic.vue","mtime":499162500000},{"path":"F:\\www\\blog\\vuepress\\vuepress-demo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1637716121766},{"path":"F:\\www\\blog\\vuepress\\vuepress-demo\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1637716141006},{"path":"F:\\www\\blog\\vuepress\\vuepress-demo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1637716121766},{"path":"F:\\www\\blog\\vuepress\\vuepress-demo\\node_modules\\vue-loader\\lib\\index.js","mtime":1637716141004}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}